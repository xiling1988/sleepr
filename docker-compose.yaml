services:
  # Service for the jobs application
  jobs:
    build:
      context: .
      dockerfile: ./apps/jobs/Dockerfile
      target: development
    command: npm run start:dev jobs # Run the jobs service in development mode
    env_file:
      - ./apps/jobs/.env
    ports:
      - '3000:3000'
      - '5555:5555' # Map port 3000 on the host to port 3000 in the container
    volumes:
      - .:/usr/src/app # Mount the current directory to /usr/src/app in the container
    environment:
      DATABASE_URL: ${DATABASE_URL}
    networks:
      - sleepr_network
    depends_on:
      - database # Ensure the database service is started before the jobs service

  auth:
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: npm run start:dev auth
    env_file:
      - ./apps/auth/.env
    ports:
      - '3001:3001'
    volumes:
      - .:/usr/src/app
    environment:
      DATABASE_URL: ${DATABASE_URL}
    networks:
      - sleepr_network
    depends_on:
      - database
  # Service for the PostgreSQL database
  database:
    image: postgres:17
    env_file:
      - ./libs/common/src/database/.env
    ports:
      - "5432:5432" # Map the host port to the container port
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data # Persist database data in a Docker volume
    networks:
      - sleepr_network

# Define a custom network for the services
networks:
  sleepr_network:

# Define a volume for persisting PostgreSQL data
volumes:
  postgres_data: